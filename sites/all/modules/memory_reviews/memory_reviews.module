<?php

/**
 * Implementation of hook_menu()
 *
 * @return array
 */
function memory_reviews_menu() {
  $items = array();

  $items['admin/memory/reviews'] = array(
    'title' => t('Memory - Reviews'),
    'description' => t('Memory - Reviews manager'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('memory_reviews_admin_reviews_manager'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * @param $form
 * @param $form_state
 * @return mixed
 */
function memory_reviews_admin_reviews_manager($form, &$form_state) {

  global $base_url;

  $form['reviews_title'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('reviews_title'),
    '#title' => t('Title'),
    '#weight' => 1,
    '#required' => TRUE,
  );

  // Sliding time between each review (in seconds)
  $form['review_sliding_time'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      ' type' => 'number', // insert space before attribute name
    ),
    '#default_value' => variable_get('review_sliding_time'),
    '#title' => t('Sliding time'),
    '#description' => t('Sliding time between each review. The time is expressed in seconds.'),
    '#required' => TRUE,
    '#weight' => 2,
  );

  // Sliding time between each review (in seconds)
  $form['review_sliding_time'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      ' type' => 'number', // insert space before attribute name
    ),
    '#default_value' => variable_get('review_sliding_time'),
    '#title' => t('Sliding time (in s)'),
    '#description' => t('Sliding time between each review. The time is expressed in seconds.'),
    '#required' => TRUE,
    '#weight' => 2,
  );

  // Sliding speed between each review (in seconds)
  $form['review_sliding_speed'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      ' type' => 'number', // insert space before attribute name
    ),
    '#default_value' => variable_get('review_sliding_speed'),
    '#title' => t('Sliding speed (in s)'),
    '#description' => t('Sliding speed between each review. The speed is expressed in seconds.'),
    '#required' => TRUE,
    '#weight' => 3,
  );

  /* Review */
  for( $i = 1 ; $i <= 3 ; $i++ ){

    // Fieldset
    $form['review_' . $i] = array(
      '#type' => 'fieldset',
      '#title' => t('Review nÂ°' . $i),
      '#weight' => 3 + $i,
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE
    );

    $review_nbr = variable_get('review_' . $i, array());

    // Person name
    $form['review_' . $i]['person'] = array(
      '#type' => 'textfield',
      '#title' => t('Lastname and firstname'),
      '#default_value' => $review_nbr['person'],
      '#required' => FALSE,
      '#weight' => 1,
    );

    // Notation
    $form['review_' . $i]['notation'] = array(
      '#type' => 'textfield',
      '#attributes' => array(
        ' type' => 'number', // insert space before attribute name
        ' min' => '0',
        ' max' => '5',
      ),
      '#default_value' => $review_nbr['notation'],
      '#title' => t('Notation /5'),
      '#required' => FALSE,
      '#weight' => 2,
    );

    // Comment (review description)
    $form['review_' . $i]['description'] = array(
      '#type' => 'text_format',
      '#format' => 'wysiwyg',
      '#default_value' => $review_nbr['description']['value'],
      '#title' => t('Description'),
      '#required' => FALSE,
      '#weight' => 3,
    );

    // Nature of the trip
    $form['review_' . $i]['nature'] = array(
      '#type' => 'textfield',
      '#title' => t('Nature of the trip'),
      '#default_value' => $review_nbr['nature'],
      '#required' => FALSE,
      '#weight' => 4,
    );

    // Date
    $form['review_' . $i]['date'] = array(
      '#type' => 'textfield',
      '#attributes' => array(
        ' type' => 'date', // insert space before attribute name
      ),
      '#default_value' => $review_nbr['date'],
      '#title' => t('Date'),
      '#required' => FALSE,
      '#weight' => 5,
    );
  }

  return system_settings_form($form);
}

/**
 * Implement hook_theme()
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function memory_reviews_theme($existing, $type, $theme, $path) {
  return array(
    'tpl_memory_reviews' => array(
      'template' => 'tpl/memory_reviews',
      'path' => drupal_get_path('module', 'memory_reviews'),
      'variables' => array('infos' => NULL),
    ),
  );
}

/**
 * @return mixed
 */
function memory_reviews_block_info() {

  $blocks['memory_reviews'] = array(
    'info' => t('Memory reviews'),
    'weight' => 1,
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '<front>',
  );

  return $blocks;
}

/**
 * @param string $delta
 * @return array
 * @throws Exception
 */
function memory_reviews_block_view($delta = '') {

  $block = array();

  switch ($delta) {
    case 'memory_reviews':

      $data["reviews_title"] = variable_get('reviews_title', array());

      $arrayReviews = array();

      for ($i = 1; $i <= 3; $i++) {

        $arrayReview = variable_get('review_' . $i, array());

        if(!empty($arrayReview["person"])){
          array_push($arrayReviews, $arrayReview);
        }
      }

      $data['arrayReviews'] = $arrayReviews;


      $nb_reviews = count($arrayReviews);
      $review_sliding_time = variable_get('review_sliding_time', array());
      $review_sliding_speed = variable_get('review_sliding_speed', array());
      drupal_add_js(
        array(
          'common' => array(
            'nb_reviews' => intval($nb_reviews),
            'review_sliding_time' => intval($review_sliding_time) * 1000,
            'review_sliding_speed' => intval($review_sliding_speed) * 1000,
          )
        ),
        array('type' => 'setting')
      );


      // Link the template
      $block['content']['#markup'] = theme('tpl_memory_reviews', $data);

      // Link a css file
      $block['content']['#attached']['css'][] = array(
        'data' => drupal_get_path('module', 'memory_reviews').'/css/memory_reviews.css',
        'type' => 'file'
      );

      // Link a js file
      $block['content']['#attached']['js'][] = array(
        'data' => drupal_get_path('module', 'memory_reviews').'/js/memory_reviews.js',
        'type' => 'file'
      );
  }

  return $block;
}
