<?php

/**
 * Implementation of hook_menu()
 *
 * @return array
 */
function memory_cart_menu() {
    $items = array();

    // Ajax Callback intended to send quotation ask
    $items['ajax/cart/quotation'] = array(
        'title' => 'Ajax callback',
        'page callback' => 'ajax_cart_send_quotation_by_email',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $items['admin/memory/user-cart-manager'] = array(
      'title' => t('Memory - User cart manager'),
      'description' => t('Memory - User cart manager'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('memory_cart_manager_admin_form'),
      'access arguments' => array('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    );

    $items['admin/memory/user-cart-manager/%/edit'] = array(
      'title' => t('Memory - User cart submission'),
      'description' => t('Memory - User cart submission'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('memory_cart_admin_submission_form'),
      'access arguments' => array('administer site configuration'),
    //        'type' => MENU_NORMAL_ITEM
    );

    return $items;
}


/**
 * @param $form
 * @param $form_state
 * @return mixed
 */
function memory_cart_admin_submission_form($form, &$form_state){

  $fullUrl  = $_SERVER["REQUEST_URI"];
  $urlId = explode("/user-cart-manager/", $fullUrl)[1];
  $urlId = explode("/", $urlId)[0];

  $query = db_select('user_cart_submissions', 'ucs');
  $query
    ->fields(
      'ucs',
      array(
        'cart_submission_id', 'user_lastname', 'user_firstname', 'user_email', 'user_phone',
        'departure_location', 'participant_number', 'departure_date', 'return_date', 'budget',
        'transport', 'comment', 'quotation_detail', 'submission_date'
      )
    );
  $query->condition('cart_submission_id', $urlId, '=');
  $results = $query->execute();

  foreach ($results as $result) {

    $form['content']['#markup'] =
      "<div>" .
        "<h2 style='text-align: center;'>Soumission n°" . $result->cart_submission_id . "</h2>" .
        "<p style='text-align: center;'>" . $result->submission_date . "</p>" .
        "<br>" .
        "<table>".
          "<tbody>".
            "<tr style='background-color: #e9e9e9;'>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>User lastname</td>".
              "<td>" . $result->user_lastname . "</td>".
            "</tr>".
            "<tr>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>User firstname</td>".
              "<td>" . $result->user_firstname . "</td>".
            "</tr>".
            "<tr style='background-color: #e9e9e9;'>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>User e-mail</td>".
              "<td>" . $result->user_email . "</td>".
            "</tr>".
            "<tr>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>User phone</td>".
              "<td>" . $result->user_phone . "</td>".
            "</tr>".
            "<tr style='background-color: #e9e9e9;'>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>Departure location</td>".
              "<td>" . $result->departure_location . "</td>".
            "</tr>".
            "<tr>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>Number of participant</td>".
              "<td>" . $result->participant_number . "</td>".
            "</tr>".
            "<tr style='background-color: #e9e9e9;'>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;' >Departure date</td>".
              "<td>" . $result->departure_date . "</td>".
            "</tr>".
            "<tr>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>Return date</td>".
              "<td>" . $result->return_date . "</td>".
            "</tr>".
            "<tr style='background-color: #e9e9e9;'>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>Budget</td>".
              "<td>" . $result->budget . "</td>".
            "</tr>".
            "<tr>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>Transport</td>".
              "<td>" . $result->transport . "</td>".
            "</tr>".
            "<tr style='background-color: #e9e9e9;'>".
              "<td style='font-weight: bold; width: 200px; border-right: 1px solid #bdbdbd;'>Comment</td>".
              "<td>" . $result->comment . "</td>".
            "</tr>".
          "</tbody>".
        "</table>" .
        "<br>" .
        "<div>" .
          "<p style='font-weight: bold;'>Detail of the quotation :</p>" .
          "<p><pre>$result->quotation_detail</pre></p>" .
        "</div>" .
      "</div>"
    ;

    $form['user_cart_submission']['cart_submission_id'] = array(
      '#type' => 'hidden',
      '#value' => $result->cart_submission_id,
      '#weight' => 1,
    );
  }

  $form['user_cart_submission']['link_submissions_list'] = array(
    '#type' => 'link',
    '#title' => t('Submissions list'),
    '#href' => "admin/memory/user-cart-manager"
  );

  $form['user_cart_submission']['delete'] = array(
    '#type' => 'submit',
    '#value' => t('Supprimer'),
    '#attributes' => array('onclick' => 'if(!confirm("Cette opération est irréversible. Etes-vous sûr de vouloir continuer ?")){return false;}'),
    '#weight' => 2,
  );

  $form['user_cart_submission']['delete']['#submit'][] = 'memory_cart_admin_submission_form_delete';

  return $form;
}

/**
 * @param $form
 * @param $form_state
 */
function memory_cart_admin_submission_form_delete($form, &$form_state){

  db_delete('user_cart_submissions')
    ->condition('cart_submission_id', $form_state['values']['cart_submission_id'], '=')
    ->execute();

  drupal_set_message("The user cart submission n°" . $form_state['values']['cart_submission_id'] . " has been deleted.");
}

function memory_cart_manager_admin_form(){

  $form['global_parameter_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Panier utilisateur - E-mail'),
    '#description' => t('E-mail d\'envoi du panier utilisateur.'),
    '#default_value' => variable_get('global_parameter_email'),
    '#maxlength' => 512,
    '#weight' => 1,
  );

  // List of submissions
  $header = array(
    'id' => array('data' => t('id'), 'field' => 'ucs.cart_submission_id'),
    'date' => array('data' => t('Submission date'), 'field' => 'ucs.submission_date'),
    'lastname' => array('data' => t('Lastname'), 'field' => 'ucs.user_lastname'),
    'firstname' => array('data' => t('Firstname'), 'field' => 'ucs.user_firstname'),
    'departure_location' => array('data' => t('Departure location'), 'field' => 'ucs.departure_location'),
    'departure_date' => array('data' => t('Departure date'), 'field' => 'ucs.departure_date'),
    'return_date' => array('data' => t('Return date'), 'field' => 'ucs.return_date'),
    'operations' => array('data' => t('Operations')),
  );

  $query = db_select('user_cart_submissions', 'ucs');
  user_build_filter_query($query);

  $count_query = clone $query;
  $count_query->addExpression('COUNT(ucs.cart_submission_id)');

  //$query = $query->extend('PagerDefault')->extend('TableSort');
  $query
    ->fields(
      'ucs',
      array(
        'cart_submission_id', 'user_lastname', 'user_firstname', 'user_email', 'user_phone',
        'departure_location', 'participant_number', 'departure_date', 'return_date', 'budget',
        'transport', 'comment', 'quotation_detail', 'submission_date'
      )
    );
  $result = $query->execute();

  $destination = drupal_get_destination();

  foreach ($result as $user_cart_submission) {

    $options[$user_cart_submission->cart_submission_id] = array(
      'id' => $user_cart_submission->cart_submission_id,
      'date' => $user_cart_submission->submission_date,
      'lastname' => $user_cart_submission->user_lastname,
      'firstname' => $user_cart_submission->user_firstname,
      'departure_location' => $user_cart_submission->departure_location,
      'departure_date' => $user_cart_submission->departure_date,
      'return_date' => $user_cart_submission->return_date,
      'operations' => array('data' => array('#type' => 'link', '#title' => t('Consulter'), '#href' => "admin/memory/user-cart-manager/$user_cart_submission->cart_submission_id/edit", '#options' => array('query' => $destination))),
    );
  }

  $form['submissions'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#empty' => t('No submissions available.'),
    '#weight' => 2,
  );

  return system_settings_form($form);
}

function insert_submissions_database($cart_global, $cart_activities){

    $quotation_detail = "Détails des activités : " . "\n\n";

    $destination_name = explode("⫼", $cart_activities->city);
    $quotation_detail .= "Destination : " . "\n";
    $quotation_detail .= "\t- Pays : " . $destination_name[0] . "\n";
    $quotation_detail .= "\t- Ville : " . $destination_name[1] . "\n\n";

    $quotation_detail =
      $quotation_detail .
      formatActivitiesToEmailText($cart_activities, $cart_global, false)
    ;

    db_insert('user_cart_submissions')->fields(
      array(
        'user_lastname' => $cart_global->lastname,
        'user_firstname' => $cart_global->firstname,
        'user_email' => $cart_global->email,
        'user_phone' => $cart_global->phone,
        'departure_location' => (($cart_global->location === null) ? "Non renseigné" : $cart_global->location),
        'participant_number' => (($cart_global->participants === null) ? "Non renseigné" : $cart_global->participants),
        'departure_date' => getDateValue($cart_global->departureDate),
        'return_date' => getDateValue($cart_global->returnDate),
        'budget' => getBudgetValue($cart_global->budget),
        'transport' => getTransportValue($cart_global->transport),
        'comment' => (($cart_global->wish === null) ? "Non renseigné" : $cart_global->wish),
        'quotation_detail' => $quotation_detail,
        'submission_date' => date("Y-m-d H:i:s"),
      )
    )
      ->execute();
}

function ajax_cart_send_quotation_by_email(){

  $destination_email = variable_get('global_parameter_email');

  $array_result_callback = array();

  if(empty($destination_email)){
    $array_result_callback["message"] = "La demande de devis n'a pas abouti. Veuillez réessayer ultérieurement.";
  }else{

    $cart_global = json_decode($_POST['cartGlobalData']);
    $cart_activities = json_decode($_POST['cartActivitiesData']);
    $express_quotation = json_decode($_POST['expressQuotation']);

    insert_submissions_database($cart_global, $cart_activities);

    // E-mail parameters
    $to = $destination_email;
    $from = $destination_email;
    $body = "";

    if($express_quotation){

      $subject = "#RAPPELEZ-MOI : " . $cart_global->lastname . " " . $cart_global->firstname; // Subject of the mail

      $body .= "Memory - Demande de devis EXPRESS";
      $body .= "\n\n";
      $body .= "------------------------------------------------------------------------";
      $body .= "\n\n";
      $body .= "Informations sur l'utilisateur : " . "\n\n";
      $body .= "Nom : " . $cart_global->lastname . "\n";
      $body .= "Prénom : " . $cart_global->firstname . "\n";
      $body .= "E-mail : " . $cart_global->email . "\n";
      $body .= "Téléphone : " . $cart_global->phone . "\n";

      $params = array(
        'subject' => $subject,
        'body' => $body,
      );

      drupal_mail('memory_cart', '10', $to, "fr", $params, $from);

      $array_result_callback["destinationEmail"] = $destination_email;
      $array_result_callback["message"] = "Votre demande de devis expresse a été transmise à l'équipe Memory. Nous vous recontacterons dans les plus brefs délais.";
    }else{

      $subject = "#DEMANDE DE DEVIS : " . $cart_global->lastname . " " . $cart_global->firstname; // Subject of the mail

      $body .= "Memory - Demande de devis";
      $body .= "\n\n";
      $body .= "------------------------------------------------------------------------";
      $body .= "\n\n";
      $body .= "Informations sur l'utilisateur : " . "\n\n";
      $body .= "Nom : " . $cart_global->lastname . "\n";
      $body .= "Prénom : " . $cart_global->firstname . "\n";
      $body .= "E-mail : " . $cart_global->email . "\n";
      $body .= "Téléphone : " . $cart_global->phone . "\n";
      $body .= "\n";
      $body .= "------------------------------------------------------------------------";
      $body .= "\n\n";
      $body .= "Informations sur le séjour : " . "\n\n";
      $body .= "Lieu de départ : " . (($cart_global->location === null) ? "Non renseigné" : $cart_global->location) . "\n";
      $body .= "Nombre de participants : " . (($cart_global->participants === null) ? "Non renseigné" : $cart_global->participants) . "\n";
      $body .= "Date de départ : " . getDateValue($cart_global->departureDate) . "\n";
      $body .= "Date de retour : " . getDateValue($cart_global->returnDate) . "\n";
      $body .= "Budget : " . getBudgetValue($cart_global->budget) . "\n";
      $body .= "Transport : " . getTransportValue($cart_global->transport) . "\n";
      $body .= "Commentaire : " . (($cart_global->wish === null) ? "Non renseigné" : $cart_global->wish) . "\n";
      $body .= "\n";
      $body .= "------------------------------------------------------------------------";
      $body .= "\n\n";
      $body .= "Détails des activités : " . "\n\n";

      $destination_name = explode("⫼", $cart_activities->city);
      $body .= "Destination : " . "\n";
      $body .= "\t- Pays : " . $destination_name[0] . "\n";
      $body .= "\t- Ville : " . $destination_name[1] . "\n\n";

      $body_memory =
        $body .
        formatActivitiesToEmailText($cart_activities, $cart_global, false)
      ;

      $body_providers =
        $body .
        formatActivitiesToEmailText($cart_activities, $cart_global, true)
      ;

      // Call mail function
      $params_memory = array(
        'subject' => $subject,
        'body' => $body_memory,
      );
      $params_providers = array(
        'subject' => $subject,
        'body' => $body_providers,
      );

      drupal_mail('memory_cart', '10', $to, "fr", $params_memory, $from);
      drupal_mail('memory_cart', '10', $to, "fr", $params_providers, $from);

      $array_result_callback["destinationEmail"] = $destination_email;
      $array_result_callback["message"] = "Votre demande de devis a été transmise à l'équipe Memory. Nous vous recontacterons dans les plus brefs délais.";
    }
  }

  drupal_json_output($array_result_callback);
}

function formatActivitiesToEmailText($cart_activities, $cart_global, $is_for_providers){

  $body = "------------------------------ Transfers ------------------------------" . "\n\n";

  foreach ($cart_activities->transfers as $key => $value){ // Add transfer activities

    $transfer_direction = (($key === 0) ? "aller" : "retour");

    if($value === null){
      $body .= "- Transfert " . $transfer_direction . " : Non définie" . "\n";
    }else{
      $body .= "- Transfert " . $transfer_direction . " : " . "\n";
      $body .= getActivityDetails($value, $is_for_providers) . "\n";
    }
  }
  $body .= "\n";

  $body .= "------------------------------ Activities ------------------------------" . "\n\n";

  $departure_date_timestamp = $cart_global->departureDate/1000;
  $max_days_number = 1;
  foreach ($cart_activities->activities as $key => $value){
    $max_days_number = $key;
  }

  foreach($cart_activities->activities as $key => $value){ // Add activities and accommodations

    $body_activities = "";

    if($cart_global->departureDate !== null && $cart_global->returnDate !== null){
      $activity_header = date("l d F Y", $departure_date_timestamp) . " : " . "\n";
    }else{
      $activity_header = "Jour n°" . $key . " : " . "\n";
    }

    $departure_date_timestamp = $departure_date_timestamp+(24*3600); // Increment day by 1

    if(count($value) === 0){ // No activities in the day
      $body_activities .= "\t- Activités : Non définie" . "\n\n";
    }else{
      foreach($value as $keyAct => $valueAct){ // Browse through each activities in the same day
        $body_activities .= "\t- Activité n°" . ($keyAct + 1) . " : " . "\n";
        $body_activities .= getActivityDetails($valueAct, $is_for_providers) . "\n";
      }
    }

    if($max_days_number !== $key){ // No hosting for the last day

      if(!empty($cart_activities->accommodations[0])){
        $body_activities .= "\t- Hébergement : " . "\n";
        $body_activities .= getActivityDetails($cart_activities->accommodations[0], $is_for_providers) . "\n";
      }else{
        $body_activities .= "\t- Hébergement :  Non défini" . "\n\n";
      }

      $body_activities .= "---------------\n\n";
    }

    $body .= $activity_header . $body_activities;
  }

  return $body;
}

function getActivityDetails($activity, $is_for_providers){

  global $base_url;

  $activity_details = "\t\t- Titre : " . $activity->activityTitle . "\n";
  $activity_details .= "\t\t- Option : " . $activity->optionTitle . "\n";
  if(!$is_for_providers){
    $activity_details .= "\t\t- Prix : " . $activity->optionPrice . "\n";
  }
  $activity_details .= "\t\t- Url : " . $base_url . "/" . drupal_get_path_alias("node/" . $activity->activityNid) . "\n";

  return $activity_details;
}

function getDateValue($timestamp){

  if($timestamp === null){
    $date = "Non définie";
  }else{

    $date_day = date("l", $timestamp/1000);
    $date_day_number = date("d", $timestamp/1000);
    $date_month = date("F", $timestamp/1000);
    $date_year = date("Y", $timestamp/1000);

    switch (strtolower($date_day)){ // French days correspondance
      case "monday" :
        $date_day = "Lundi";
        break;
      case "tuesday" :
        $date_day = "Mardi";
        break;
      case "wednesday" :
        $date_day = "Mercredi";
        break;
      case "thursday" :
        $date_day = "Jeudi";
        break;
      case "friday" :
        $date_day = "Vendredi";
        break;
      case "saturday" :
        $date_day = "Samedi";
        break;
      case "sunday" :
        $date_day = "Dimanche";
        break;
    }

    switch (strtolower($date_month)){ // French months correspondance
      case "january" :
        $date_month = "Janvier";
        break;
      case "february" :
        $date_month = "Février";
        break;
      case "march" :
        $date_month = "Mars";
        break;
      case "april" :
        $date_month = "Avril";
        break;
      case "may" :
        $date_month = "Mai";
        break;
      case "june" :
        $date_month = "Juin";
        break;
      case "july" :
        $date_month = "Juillet";
        break;
      case "august" :
        $date_month = "Août";
        break;
      case "september" :
        $date_month = "Septembre";
        break;
      case "october" :
        $date_month = "Octobre";
        break;
      case "november" :
        $date_month = "Novembre";
        break;
      case "december" :
        $date_month = "Décembre";
        break;
    }

    $date = $date_day . " " . $date_day_number  . " " . $date_month . " " . $date_year;
  }

  return $date;
}

function getBudgetValue($budget_id){

  switch ($budget_id){
    case null :
      $budgetValue = "Non communiqué";
      break;
    case 0 :
      $budgetValue = "- de 100€";
      break;
    case 1 :
      $budgetValue = "100-200€";
      break;
    case 2 :
      $budgetValue = "200-300€";
      break;
    case 3 :
      $budgetValue = "300-400€";
      break;
    case 4 :
      $budgetValue = "400-500€";
      break;
    case 5 :
      $budgetValue = "+ de 500€";
      break;
    default :
      $budgetValue = "Non communiqué";
  }

  return $budgetValue;
}

function getTransportValue($transport_id){

  switch ($transport_id){
    case null :
      $transportValue = "Non communiqué";
      break;
    case 0 :
      $transportValue = "Oui, j’en ai besoin";
      break;
    case 1 :
      $transportValue = "Non je voyage par mes propres moyens";
      break;
    case 2 :
      $transportValue = "Je ne sais pas encore";
      break;
    default :
      $transportValue = "Non communiqué";
  }

  return $transportValue;
}

/**
 * Implementation of hook_mail().
 *
 * A very simple hook_mail() implementation, for module "memory_cart".
 * This implementation expects to receive a $body, $subject, and $headers
 * inside the $params sent from drupal_mail(), rather than construct
 * those here in the hook.
 * @param $key
 * @param $message
 * @param $params
 * @see drupal_mail()
 */
function memory_cart_mail($key, &$message, $params) {
  switch ($key) {
    case '10':
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
      break;
  }
}

/**
 * Implement hook_theme()
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function memory_cart_theme($existing, $type, $theme, $path) {
    return array(
        'tpl_memory_cart' => array(
            'template' => 'tpl/memory_cart',
            'path' => drupal_get_path('module', 'memory_cart'),
            'variables' => array('infos' => NULL),
        ),
    );
}

/**
 * @return mixed
 */
function memory_cart_block_info() {

    $blocks['memory_cart'] = array(
        'info' => t('Memory cart'),
        'weight' => 1,
        'status' => 1,
        'region' => 'content',
        'visibility' => BLOCK_VISIBILITY_NOTLISTED,
        'pages' => 'contact\radmin/*\rmedia/*\rnode/*/edit',
    );

    return $blocks;
}

function memory_cart_form($form, &$form_state){

  $form['user_cart_recaptcha'] = array(
    '#type' => 'captcha',
    '#captcha_type' => 'recaptcha/reCAPTCHA',
  );

  return $form;
}

/**
 * @param string $delta
 * @return array
 * @throws Exception
 */
function memory_cart_block_view($delta = '') {

    $block = array();

    switch ($delta) {
        case 'memory_cart':

            // Link the template
            $block['content']['#markup'] = theme('tpl_memory_cart', array(
              'form' => drupal_get_form('memory_cart_form'),
            ));

            // Link a css file
            $block['content']['#attached']['css'][] = array(
              'data' => drupal_get_path('module', 'memory_cart').'/css/memory_cart.css',
              'type' => 'file'
            );

            // Link a js file
            $block['content']['#attached']['js'][] = array(
              'data' => drupal_get_path('module', 'memory_cart').'/js/memory_cart.js',
              'type' => 'file'
            );
            $block['content']['#attached']['js'][] = array(
                'data' => drupal_get_path('module', 'memory_cart').'/js/memory_cart_form.js',
                'type' => 'file'
            );
            $block['content']['#attached']['js'][] = array(
                'data' => drupal_get_path('module', 'memory_cart').'/js/memory_cart_advanced_form.js',
                'type' => 'file'
            );
            $block['content']['#attached']['js'][] = array(
                'data' => drupal_get_path('module', 'memory_cart').'/js/memory_cart_move_activities.js',
                'type' => 'file'
            );
            $block['content']['#attached']['js'][] = array(
                'data' => drupal_get_path('module', 'memory_cart').'/js/memory_cart_ajax_request.js',
                'type' => 'file'
            );

            break;
    }

    return $block;
}
